[DEFAULT]

debug = False

# Name of the gdb executable, usualy is "gdb-mic" for Xeon Phi
gdbExecName = gdb

# How many interrupt signals to send sequentially
seqSignals = 1

# How many random threads will attempt to send interrupt signals
numThreadsFI = 1

# Which fault model to use, 0 -> single; 1 -> double; 2 -> random; 3 -> zeros; 4 -> least significant bits (LSB)
faultModel = 4


################### Mergesort ###################
[recursive_merge]

goldFile = /tmp/recursive_merge/gold_100000000
outputFile = /tmp/recursive_merge/output_100000000

# Start and end time to try randomly inject a fault
initSignal = 0
endSignal = 2
# How many interrupt signals to send sequentially
seqSignals = 5
# How many random threads will attempt to send interrupt signals
numThreadsFI = 5

# Max time to send signal. It should be the app exec time in seconds
maxWaitTime = 2

# Commands to set the session inside GDB environment
gdbInitStrings = file /tmp/recursive_merge/recursive_merge;set args 100000000 /tmp/recursive_merge/inputsort_100000000 /tmp/recursive_merge/output_100000000

# Shell command to send SIGINT to the application being tested
signalCmd = killall -2 recursive_merge

# Kill commands to exit all applications (GDB and the application tested)
# Need to ensure safe termination before another fault injection test
killStrs = killall -9 gdb;killall -9 recursive_merge

